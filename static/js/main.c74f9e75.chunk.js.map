{"version":3,"sources":["components/Posts.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Posts","props","useState","post","setPost","title","setTitle","limit","userId","setUserId","body","setBody","useEffect","fetch","undefined","then","res","json","state","console","log","placeholder","onChange","event","target","value","style","margin","className","filter","includes","map","output","boxShadow","Home","userInfo","setUserInfo","company","setCompany","name","setName","showPost","setShowPost","claasName","temp","onClick","id","website","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c74f9e75.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nconst Posts=(props)=>{\r\nconst [post,setPost]=useState([]);\r\nconst [title,setTitle]=useState('');\r\nconst [limit,setLimit]=useState(10);\r\nconst [userId,setUserId]=useState(props.userId);\r\nconst [body,setBody]=useState('');\r\n\r\n\r\nuseEffect(()=>{\r\n\r\nfetch(`https://jsonplaceholder.typicode.com/posts?${userId===undefined?null:\"userId=\"+userId}&skip=0&limit=\"${limit}\"`).then((res)=>{\r\n    return res.json();\r\n}).then((res)=>{\r\n  setPost(state=>[...state,...res]);\r\n  console.log(post )\r\n})\r\n},[userId])\r\n\r\n\r\n\r\nconst submitHandler=(event)=>{\r\n    setPost([]);\r\n    setUserId(event.target.value)\r\n    setUserId(event.target.value)\r\n\r\n    console.log(userId)\r\n    fetch(`https://jsonplaceholder.typicode.com/posts?${userId===undefined?null:\"userId=\"+userId}&skip=0&limit=${limit}`).then((res)=>{\r\n      \r\n    return res.json();\r\n}).then((res)=>{\r\n  setPost(state=>[...state,...res]);\r\n \r\n})   \r\n}\r\n\r\n    return(\r\n      <>\r\n      <div>\r\n          <input placeholder=\"Search By Title\" onChange={(event)=>{setTitle(event.target.value)}} style={{margin:\"10px\"}}  />\r\n          <input placeholder=\"user Id\" onChange={submitHandler} style={{margin:\"10px\"}} value={userId} />\r\n         <input placeholder=\"Search By Body\" onChange={(event)=>{setBody(event.target.value)}} style={{margin:\"10px\"}}  />  \r\n        </div>\r\n            <div className=\"container \">\r\n            <div className=\"row bg-primary p-2\" >\r\n            <div className=\"col\">User Id</div>\r\n            <div className=\"col\">Title</div>\r\n            <div className=\"col\">Body</div>\r\n            </div>\r\n            </div>\r\n          {\r\n            post.filter(value=> { return  value.title.includes(title) &&  value.body.includes(body) || value.userId===userId }).map((output)=>{\r\n             \r\n              return(\r\n                <>\r\n                <div className=\"container\" style={{boxShadow :\"1px 1px 8px #888888\"}}>\r\n                <div className=\"row\">\r\n                <div className=\"col\">{output.userId}</div>\r\n                <div className=\"col\">{output.title}</div>\r\n                <div className=\"col\">{output.body}</div>\r\n                </div>\r\n                </div>\r\n                </>\r\n              )\r\n          })\r\n      }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Posts;","import React,{useState,useEffect} from 'react';\r\nimport Posts from './Posts';\r\n\r\nconst Home=()=>{\r\nconst [userInfo,setUserInfo]=useState([]);\r\nconst [company,setCompany]=useState('');\r\nconst [name,setName]=useState('');\r\nconst [userId,setUserId]=useState('');\r\nconst [showPost,setShowPost]=useState(false)\r\nuseEffect(()=>{\r\nfetch('https://jsonplaceholder.typicode.com/users').then((res)=>{\r\n    return res.json();\r\n}).then((res)=>{\r\n  setUserInfo(state=>[...state,...res]);\r\n  console.log(userInfo )\r\n})\r\n},[])\r\n    return(\r\n        <>\r\n\r\n\r\n    {!showPost?<div claasName=\"container\">Click On the Box to see Post which User made</div>:null}\r\n     \r\n     \r\n      {showPost?<div className=\"col\"><Posts userId={userId}/></div>:null}\r\n     <br></br>\r\n\r\n        <div>\r\n        <input placeholder=\"Search By Name\" onChange={(event)=>{setName(event.target.value)}} style={{margin:\"10px\"}}  />\r\n        <input placeholder=\"Search By Company\" onChange={(event)=>{setCompany(event.target.value)}}/>\r\n        </div>\r\n\r\n      \r\n\r\n            <div className=\"container \">\r\n            <div className=\"row bg-primary p-2\">\r\n            <div className=\"col\">Name</div>\r\n            <div className=\"col\">company</div>\r\n            <div className=\"col\">Blog Site</div>\r\n           \r\n            </div>\r\n            </div>\r\n      {\r\n          userInfo.filter(temp => temp.name.includes(name) && temp.company.name.includes(company)).map((output)=>{\r\n              return(\r\n                  <>\r\n                <div className=\"container\" style={{boxShadow :\"10px 10px 8px #888888\"}} onClick={(event)=>{setUserId(output.id); setShowPost(true)}}>\r\n                    <div className=\"row bg-light\" >\r\n                    <div className=\"col\">{output.name}</div>\r\n                    <div className=\"col\">{output.company.name}</div>\r\n                    <div className=\"col\">{output.website}</div>\r\n                   \r\n                </div>\r\n                </div>\r\n                </>\r\n              )\r\n          })\r\n      }\r\n\r\n    \r\n     \r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import './App.css';\nimport Home from './components/Home';\nimport Posts from './components/Posts';\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Home/> \n    {/*  <Posts/>  */} \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}